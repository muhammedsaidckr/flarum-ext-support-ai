{"version":3,"file":"admin.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,+BCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAzC,SAASC,EAAgBhB,EAAGiB,GAKzC,OAJAD,EAAkBf,OAAOiB,eAAiBjB,OAAOiB,eAAeC,OAAS,SAAyBnB,EAAGiB,GAEnG,OADAjB,EAAEoB,UAAYH,EACPjB,CACT,EACOgB,EAAgBhB,EAAGiB,EAC5B,CCNA,MAAM,EAA+BJ,OAAOC,KAAKC,OAAO,kC,ICGnCM,EAAe,SAAAC,GCFrB,IAAwBC,EAAUC,EDEb,SAAAH,IAAA,OAAAC,EAAAG,MAAA,KAAAC,YAAA,KCFaF,EDEbF,GCFGC,EDEHF,GCDzBd,UAAYN,OAAO0B,OAAOH,EAAWjB,WAC9CgB,EAAShB,UAAUqB,YAAcL,EACjCL,EAAeK,EAAUC,GDDS,IAAAK,EAAAR,EAAAd,UA6E/B,OA7E+BsB,EAChCC,OAAA,SAAOC,GACHT,EAAAf,UAAMuB,OAAMrB,KAAC,KAAAsB,GACbC,KAAKC,SAAU,CACnB,EAACJ,EAEDK,QAAA,WACI,OACIC,EAAA,OAAKC,UAAU,0BACXD,EAAA,OAAKC,UAAU,aACXD,EAAA,OAAKC,UAAU,QACVJ,KAAKK,sBAAsB,CACxBC,QAAS,sBACTC,KAAM,OACNC,MAAOC,IAAAA,WAAAA,MAAqB,4CAC5BC,KAAMD,IAAAA,WAAAA,MAAqB,0CAA2C,CAClE7C,EAAGuC,EAAA,KAAGQ,KAAK,+CAA+CC,OAAO,SAASC,IAAI,eAElFC,YAAa,WAEhBd,KAAKK,sBAAsB,CACxBC,QAAS,oBACTC,KAAM,WACNQ,QAAS,CACL,yBAA0B,0BAE9BP,MAAOC,IAAAA,WAAAA,MAAqB,0CAC5BC,KAAMD,IAAAA,WAAAA,MAAqB,wCAAyC,CAChE7C,EAAGuC,EAAA,KAAGQ,KAAK,mDAAmDC,OAAO,SAASC,IAAI,iBAGzFb,KAAKK,sBAAsB,CACxBC,QAAS,yBACTC,KAAM,SACNC,MAAOC,IAAAA,WAAAA,MAAqB,+CAC5BC,KAAMD,IAAAA,WAAAA,MAAqB,6CAA8C,CACrE7C,EAAGuC,EAAA,KAAGQ,KAAK,8CAA8CC,OAAO,SAASC,IAAI,eAEjFG,QAAS,MAEZhB,KAAKK,sBAAsB,CACxBC,QAAS,0BACTC,KAAM,OACNC,MAAOC,IAAAA,WAAAA,MAAqB,gDAC5BC,KAAMD,IAAAA,WAAAA,MAAqB,iDAE9BT,KAAKK,sBAAsB,CACxBC,QAAS,qCACTC,KAAM,OACNC,MAAOC,IAAAA,WAAAA,MAAqB,sDAC5BC,KAAMD,IAAAA,WAAAA,MAAqB,uDAE9BT,KAAKK,sBAAsB,CACxBC,QAAS,2CACTC,KAAM,UACNC,MAAOC,IAAAA,WAAAA,MAAqB,iEAC5BC,KAAMD,IAAAA,WAAAA,MAAqB,kEAE9BT,KAAKK,sBAAsB,CACxBE,KAAM,0BACND,QAAS,2BACTE,MAAOC,IAAAA,WAAAA,MAAqB,iDAC5BC,KAAMD,IAAAA,WAAAA,MAAqB,gDAC3BM,QAAS,CACLE,kBAAkB,EAClBC,OAAQ,CACJC,IAAK,CACDC,UAAW,OAK3BjB,EAAA,OAAKC,UAAU,cAAcJ,KAAKqB,kBAKtD,EAAChC,CAAA,CA7E+B,C,MAASiC,IEA7Cb,IAAAA,aAAAA,IAAqB,kBAAkB,WAEnCA,IAAAA,cAAAA,IACS,kBACJc,gBAAgB,CACbjB,QAAS,gCACTE,MAAOC,IAAAA,WAAAA,MAAqB,wCAC5BF,KAAM,UAETgB,gBAAgB,CACbjB,QAAS,uBACTE,MAAOC,IAAAA,WAAAA,MAAqB,sCAC5BF,KAAM,SACNQ,QAAS,CACL,QAAS,QACT,yBAA0B,mBAGjCQ,gBAAgB,CACbjB,QAAS,yCACTE,MAAOC,IAAAA,WAAAA,MAAqB,iDAC5BF,KAAM,UAETgB,gBAAgB,CACbjB,QAAS,0BACTE,MAAOC,IAAAA,WAAAA,MAAqB,yCAC5BF,KAAM,UAETgB,gBAAgB,CACbjB,QAAS,yBACTE,MAAOC,IAAAA,WAAAA,MAAqB,wCAC5BF,KAAM,aAETgB,gBAAgB,CACbjB,QAAS,iCACTE,MAAOC,IAAAA,WAAAA,MAAqB,gDAC5BF,KAAM,aAGTiB,mBAAmB,CAChBC,WAAY,kCACZjB,MAAOC,IAAAA,WAAAA,MAAqB,iDAC5BiB,KAAM,gBACP,SACFF,mBAAmB,CAChBC,WAAY,uCACZjB,MAAOC,IAAAA,WAAAA,MAAqB,sDAC5BiB,KAAM,gBACP,SACFF,mBAAmB,CAChBC,WAAY,wCACZjB,MAAOC,IAAAA,WAAAA,MAAqB,uDAC5BiB,KAAM,gBACP,SACFC,aAAatC,EACtB,G","sources":["webpack://@msc/support-ai/webpack/bootstrap","webpack://@msc/support-ai/webpack/runtime/compat get default export","webpack://@msc/support-ai/webpack/runtime/define property getters","webpack://@msc/support-ai/webpack/runtime/hasOwnProperty shorthand","webpack://@msc/support-ai/webpack/runtime/make namespace object","webpack://@msc/support-ai/external root \"flarum.core.compat['admin/app']\"","webpack://@msc/support-ai/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@msc/support-ai/external root \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@msc/support-ai/./src/admin/components/ChatGptSettings.tsx","webpack://@msc/support-ai/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@msc/support-ai/./src/admin/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/components/ExtensionPage'];","import app from 'flarum/admin/app';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\n\nexport default class ChatGptSettings extends ExtensionPage {\n    oninit(vnode) {\n        super.oninit(vnode);\n        this.loading = false;\n    }\n\n    content() {\n        return (\n            <div className=\"ExtensionPage-settings\">\n                <div className=\"container\">\n                    <div className=\"Form\">\n                        {this.buildSettingComponent({\n                            setting: 'msc-chatgpt.api_key',\n                            type: 'text',\n                            label: app.translator.trans('msc-chatgpt.admin.settings.api_key_label'),\n                            help: app.translator.trans('msc-chatgpt.admin.settings.api_key_help', {\n                                a: <a href=\"https://platform.openai.com/account/api-keys\" target=\"_blank\" rel=\"noopener\"/>,\n                            }),\n                            placeholder: 'sk-...',\n                        })}\n                        {this.buildSettingComponent({\n                            setting: 'msc-chatgpt.model',\n                            type: 'dropdown',\n                            options: {\n                                'gpt-3.5-turbo-instruct': 'gpt-3.5-turbo-instruct'\n                            },\n                            label: app.translator.trans('msc-chatgpt.admin.settings.model_label'),\n                            help: app.translator.trans('msc-chatgpt.admin.settings.model_help', {\n                                a: <a href=\"https://platform.openai.com/docs/models/overview\" target=\"_blank\" rel=\"noopener\"/>,\n                            }),\n                        })}\n                        {this.buildSettingComponent({\n                            setting: 'msc-chatgpt.max_tokens',\n                            type: 'number',\n                            label: app.translator.trans('msc-chatgpt.admin.settings.max_tokens_label'),\n                            help: app.translator.trans('msc-chatgpt.admin.settings.max_tokens_help', {\n                                a: <a href=\"https://help.openai.com/en/articles/4936856\" target=\"_blank\" rel=\"noopener\"/>,\n                            }),\n                            default: 100,\n                        })}\n                        {this.buildSettingComponent({\n                            setting: 'msc-chatgpt.user_prompt',\n                            type: 'text',\n                            label: app.translator.trans('msc-chatgpt.admin.settings.user_prompt_label'),\n                            help: app.translator.trans('msc-chatgpt.admin.settings.user_prompt_help'),\n                        })}\n                        {this.buildSettingComponent({\n                            setting: 'msc-chatgpt.user_prompt_badge_text',\n                            type: 'text',\n                            label: app.translator.trans('msc-chatgpt.admin.settings.user_prompt_badge_label'),\n                            help: app.translator.trans('msc-chatgpt.admin.settings.user_prompt_badge_help'),\n                        })}\n                        {this.buildSettingComponent({\n                            setting: 'msc-chatgpt.enable_on_discussion_started',\n                            type: 'boolean',\n                            label: app.translator.trans('msc-chatgpt.admin.settings.enable_on_discussion_started_label'),\n                            help: app.translator.trans('msc-chatgpt.admin.settings.enable_on_discussion_started_help'),\n                        })}\n                        {this.buildSettingComponent({\n                            type: 'flarum-tags.select-tags',\n                            setting: 'msc-chatgpt.enabled-tags',\n                            label: app.translator.trans('msc-chatgpt.admin.settings.enabled_tags_label'),\n                            help: app.translator.trans('msc-chatgpt.admin.settings.enabled_tags_help'),\n                            options: {\n                                requireParentTag: false,\n                                limits: {\n                                    max: {\n                                        secondary: 0,\n                                    },\n                                },\n                            },\n                        })}\n                        <div className=\"Form-group\">{this.submitButton()}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import app from 'flarum/admin/app';\nimport ChatGptSettings from \"./components/ChatGptSettings\";\n\napp.initializers.add('msc-support-ai', () => {\n\n    app.extensionData\n        .for('msc-support-ai')\n        .registerSetting({\n            setting: 'msc-support-ai.openai-api-key',\n            label: app.translator.trans('msc-support-ai.admin.setting.api-key'),\n            type: 'input',\n        })\n        .registerSetting({\n            setting: 'msc-support-ai.model',\n            label: app.translator.trans('msc-support-ai.admin.setting.model'),\n            type: 'select',\n            options: {\n                'gpt-4': 'GPT-4',\n                'gpt-3.5-turbo-instruct': 'GPT-3.5 Turbo',\n            }\n        })\n        .registerSetting({\n            setting: 'msc-support-ai.openai-api-organisation',\n            label: app.translator.trans('msc-support-ai.admin.setting.api-organisation'),\n            type: 'input',\n        })\n        .registerSetting({\n            setting: 'msc-support-ai.username',\n            label: app.translator.trans('msc-support-ai.admin.setting.username'),\n            type: 'input',\n        })\n        .registerSetting({\n            setting: 'msc-support-ai.persona',\n            label: app.translator.trans('msc-support-ai.admin.setting.persona'),\n            type: 'textarea',\n        })\n        .registerSetting({\n            setting: 'msc-support-ai.how-to-moderate',\n            label: app.translator.trans('msc-support-ai.admin.setting.how-to-moderate'),\n            type: 'textarea',\n        })\n\n        .registerPermission({\n            permission: 'discussion.supportAiRespondToOp',\n            label: app.translator.trans('msc-support-ai.admin.permission.respond-to-op'),\n            icon: 'fas fa-robot',\n        }, 'reply')\n        .registerPermission({\n            permission: 'discussion.supportAiRespondToReplies',\n            label: app.translator.trans('msc-support-ai.admin.permission.respond-to-replies'),\n            icon: 'fas fa-robot',\n        }, 'reply')\n        .registerPermission({\n            permission: 'discussion.supportAiRespondToMentions',\n            label: app.translator.trans('msc-support-ai.admin.permission.respond-to-mentions'),\n            icon: 'fas fa-robot',\n        }, 'reply')\n        .registerPage(ChatGptSettings);\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","ChatGptSettings","_ExtensionPage","subClass","superClass","apply","arguments","create","constructor","_proto","oninit","vnode","this","loading","content","m","className","buildSettingComponent","setting","type","label","app","help","href","target","rel","placeholder","options","default","requireParentTag","limits","max","secondary","submitButton","ExtensionPage","registerSetting","registerPermission","permission","icon","registerPage"],"sourceRoot":""}